#!/usr/bin/env bash
set -e

# Check that there is only one numeric argument
if [[ ! "$1" =~ ^[0-9]+$ ]] || [ $# -gt 1 ]; then
   echo "USAGE: gh mfem-merge-into-next <pr-number>"
   exit 1
fi

# Make sure the working directory is clean
if [ -n "$(git status --porcelain)" ]; then
   echo "Must merge with clean working directory"
   exit 1
fi

# Check out next and get latest updates from origin
git checkout next
git pull

# Get the owner and branch name of the PR. If the PR is from a fork, the owner
# is the name of whoever forked the repo. Otherwise, the owner is "mfem"
pr_owner=$(gh pr view $1 --json headRepositoryOwner --jq ".headRepositoryOwner.login")
pr_branch=$(gh pr view $1 --json headRefName --jq '.headRefName')

# For forks, use the format "owner:branch". If it's not a fork, use "branch".
if [ "$pr_owner" == "mfem" ]; then
   pr_from="$pr_branch"
else
   pr_from="$pr_owner:$pr_branch"
fi

# Customize the commit message with the branch name and PR number.
commit_msg="Merge branch '$pr_from' into next (PR #$1)"

# Check out the latest commit from the PR into a temporary branch, merge into
# next, and then delete the temporary branch.
tmp_branch=gh/pr/$1

repo_root=$(git rev-parse --show-toplevel)

git fetch origin pull/$1/head:$tmp_branch
if $repo_root/tests/scripts/branch-history -b $tmp_branch $repo_root; then
   echo -e "\033[1;32mBranch history check succcessful.\033[0m"
else
   echo -e "\033[1;31mBranch history check failed.\033[0m"
   git branch -D $tmp_branch
   exit 1
fi
merge_result=$(git merge $tmp_branch -m "$commit_msg")
git branch -D $tmp_branch

# If the merge was a no-op, let the user know. This probably means the PR was
# already merged into next.
if [ "$merge_result" = "Already up to date." ]; then
   echo
   echo -e "\033[1;33mNo chages made. Has PR #$1 already been merged into next?\033[0m"
   echo
else
   echo
   echo -e "\033[0;32mMerged PR #$1 [$pr_from] into next with commit message:\033[0m"
   echo
   echo "    $commit_msg"
   echo
   echo -e "\033[0;34mRun 'git push' to push the merge to GitHub.\033[0m"
fi
